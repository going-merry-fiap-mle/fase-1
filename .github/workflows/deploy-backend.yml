name: Deploy Backend to Heroku

on:
  push:
    branches:
      - main
      - dev
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Heroku Container Registry
        run: echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com

      - name: Set Heroku app name
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "HEROKU_APP_NAME=${{ secrets.HEROKU_APP_NAME_BACKEND_PROD }}" >> $GITHUB_ENV
          else
            echo "HEROKU_APP_NAME=${{ secrets.HEROKU_APP_NAME_BACKEND_DEV }}" >> $GITHUB_ENV
          fi

      - name: Prepare Dockerfile for backend
        run: mv Dockerfile-backend Dockerfile

      - name: Build and push Docker image
        run: |
          docker build -t registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web .
          docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web

      - name: Release app on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          IMAGE_ID=$(docker inspect registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web --format={{.Id}})
          curl -n -X PATCH https://api.heroku.com/apps/${{ env.HEROKU_APP_NAME }}/formation \
            -d '{ "updates": [ { "type": "web", "docker_image": "'"$IMAGE_ID"'" } ] }' \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -H "Authorization: Bearer $HEROKU_API_KEY"

